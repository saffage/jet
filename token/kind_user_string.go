// Code generated by "stringer -type=Kind -output=kind_user_string.go -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Comment-2]
	_ = x[Ident-3]
	_ = x[Underscore-4]
	_ = x[Type-5]
	_ = x[Int-6]
	_ = x[Float-7]
	_ = x[String-8]
	_ = x[LParen-9]
	_ = x[RParen-10]
	_ = x[LCurly-11]
	_ = x[RCurly-12]
	_ = x[LBracket-13]
	_ = x[RBracket-14]
	_ = x[Colon-15]
	_ = x[Comma-16]
	_ = x[Eq-17]
	_ = x[EqOp-18]
	_ = x[Bang-19]
	_ = x[NeOp-20]
	_ = x[LtOp-21]
	_ = x[LeOp-22]
	_ = x[GtOp-23]
	_ = x[GeOp-24]
	_ = x[Shl-25]
	_ = x[ShlEq-26]
	_ = x[Shr-27]
	_ = x[ShrEq-28]
	_ = x[Plus-29]
	_ = x[PlusEq-30]
	_ = x[Minus-31]
	_ = x[MinusEq-32]
	_ = x[Asterisk-33]
	_ = x[AsteriskEq-34]
	_ = x[Slash-35]
	_ = x[SlashEq-36]
	_ = x[Percent-37]
	_ = x[PercentEq-38]
	_ = x[Caret-39]
	_ = x[CaretEq-40]
	_ = x[Amp-41]
	_ = x[AmpEq-42]
	_ = x[And-43]
	_ = x[AndEq-44]
	_ = x[Pipe-45]
	_ = x[PipeEq-46]
	_ = x[Or-47]
	_ = x[OrEq-48]
	_ = x[Arrow-49]
	_ = x[FatArrow-50]
	_ = x[Dot-51]
	_ = x[Dot2-52]
	_ = x[KwLet-53]
	_ = x[KwType-54]
	_ = x[KwWhen-55]
	_ = x[KwIf-56]
	_ = x[KwElse-57]
	_ = x[KwIn-58]
	_ = x[KwAs-59]
	_ = x[KwDefer-60]
	_ = x[KwPanic-61]
	_ = x[KwBreak-62]
	_ = x[KwReturn-63]
	_ = x[KwContinue-64]
}

const _Kind_user_name = "illegal characterend of filecommentidentifierunderscoretypeuntyped intuntyped floatuntyped string'('')''{''}''['']'':'','operator '='operator '=='operator '!'operator '!='operator '<'operator '<='operator '>'operator '>='operator '<<'operator '<<='operator '>>'operator '>>='operator '+'operator '+='operator '-'operator '-='operator '*'operator '*='operator '/'operator '/='operator '%'operator '%='operator '^'operator '^='operator '&'operator '&='operator '&&'operator '&&='operator '|'operator '|='operator '||'operator '||='operator '->'operator '=>'operator '.'operator '..'keyword 'let'keyword 'type'keyword 'when'keyword 'if'keyword 'else'keyword 'in'keyword 'as'keyword 'defer'keyword 'panic'keyword 'break'keyword 'return'keyword 'continue'"

var _Kind_user_index = [...]uint16{0, 17, 28, 35, 45, 55, 59, 70, 83, 97, 100, 103, 106, 109, 112, 115, 118, 121, 133, 146, 158, 171, 183, 196, 208, 221, 234, 248, 261, 275, 287, 300, 312, 325, 337, 350, 362, 375, 387, 400, 412, 425, 437, 450, 463, 477, 489, 502, 515, 529, 542, 555, 567, 580, 593, 607, 621, 633, 647, 659, 671, 686, 701, 716, 732, 750}

func (i Kind) UserString() string {
	if i >= Kind(len(_Kind_user_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_user_name[_Kind_user_index[i]:_Kind_user_index[i+1]]
}
